utilizar bepd/builtins

[DOCUMENTA
@brief{Crea una enumeración.}

Devuelve una clase que representa una enumeración. @pd{nombre} debe ser el
nombre de la variable que contiene a dicha clase (esto es necesario para que la
clase devuelta contenga el atributo @code{#nombre} correcto y para que el
método @code{#comoTexto} de las instancias sea correcto).

@pd{...campos} debe ser una secuencia de textos, cada uno será un valor
distínto de la enumeración.

Una enumeración es una clase con un número fijo de instancias únicas. Cada una
de estas instancias está expuesta por un método estático con su mismo
nombre. Cada instancia solo tiene tres métodos: @code{igualA} (junto a
@code{operador_=}) y @code{comoTexto}. Las instancias solo se comparan como
iguales a si mismas.

Por ejemplo:

@ejemplo|{
variables Letras, ExtensiónDeArchivo
fijar Letras a Enum: {Letras}, {ALPHA}, {BETA}, {GAMMA}, {OMEGA}, {DELTA}
fijar ExtensiónDeArchivo a Enum: {ExtensiónDeArchivo}, {PD}, {TXT}, {MD}, {PNG}, {OTRO}, {ALPHA}

necesitas Letras#ALPHA = Letras#ALPHA
necesitas no (Letras#BETA = Letras#ALPHA)
necesitas no (Letras#ALPHA = ExtensiónDeArchivo#ALPHA)
}|
DOCUMENTA]
funcion Enum: nombre, ...campos
    clase Enumeración
        metodo inicializar: valor
        metodo comoTexto

        metodo estatico comoTexto
        metodo estatico metodoNoEncontrado: mensaje, argumentos
    finclase

    atributo Enumeración#_valor

    metodo Enumeración#inicializar: valor
        fijar yo#_valor a valor
    finmetodo

    metodo Enumeración#comoTexto
        devolver {(~t: ~t)}#formatear: (TipoDe: yo), yo#_valor
    finmetodo

    metodo estatico Enumeración#comoTexto
        devolver {Clase ~t}#formatear: nombre
    finmetodo

    metodo estatico Enumeración#metodoNoEncontrado: mensaje, argumentos
        si Contiene: campos, mensaje
            necesitas argumentos#longitud = 0
            devolver yo#crear: mensaje
        finsi
        si (mensaje = {igualA}) || (mensaje = {operador_=})
            necesitas argumentos#longitud = 1
            devolver __CompararObjeto: yo, (argumentos#en: 0)
        finsi
        si mensaje = {clonar}
            necesitas argumentos#longitud = 0
            devolver __ClonarObjeto: yo
        finsi
        __FallarConMensaje: ({Método ~t no encontrado en la instancia de ~t}#formatear: mensaje, yo)
    finmetodo

    devolver Enumeración
finfuncion
