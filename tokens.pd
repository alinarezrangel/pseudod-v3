utilizar bepd/builtins
utilizar bepd/x/puerto/conPosición como PuertoConPos

clase AreaTextual
    atributos posiciónInicial, posiciónFinal

    metodo inicializar: posInicial, posFinal

    metodo comoTexto
finclase

metodo AreaTextual#inicializar: posiciónInicial, posiciónFinal
    fijar yo#posiciónInicial a posiciónInicial
    fijar yo#posiciónFinal a posiciónFinal
finmetodo

metodo AreaTextual#comoTexto
    devolver {(desde ~t hasta ~t)}#formatear: yo#posiciónInicial, yo#posiciónFinal
finmetodo

clase Token
    atributos areaDelToken, texto

    metodo inicializar: area, texto

    metodo comoTexto
    metodo comoTextoBonito
finclase

metodo Token#inicializar: area, texto
    fijar yo#areaDelToken a area
    fijar yo#texto a texto
finmetodo

metodo Token#comoTexto
    devolver {(Token (~t) en ~t contiene [~t])}#formatear: (TipoDe: yo), yo#areaDelToken, yo#texto
finmetodo

metodo Token#comoTextoBonito
    devolver {un token general [~t]}#formatear: yo#texto
finmetodo

clase TokenIdentificador hereda Token
    metodo comoTextoBonito
finclase

metodo TokenIdentificador#comoTextoBonito
    devolver {un identificador [~t]}#formatear: yo#texto
finmetodo

clase TokenPalabraClave hereda Token
    atributo palabraClave

    metodo inicializar: area, texto, palabra

    metodo comoTextoBonito
finclase

metodo TokenPalabraClave#inicializar: area, texto, palabra
    (Token#_crearConYo: yo)#inicializar: area, texto
    fijar yo#palabraClave a palabra
finmetodo

metodo TokenPalabraClave#comoTextoBonito
    devolver {una palabra clave [~t]}#formatear: yo#texto
finmetodo

variable PALABRAS_CLAVE
fijar PALABRAS_CLAVE a
    (Arreglo#crearCon:
        {#}, {(}, {)}, {,}, {.}, {:}, {%}, {\}, {"}, {«}, {»}, «{», «}»,
        {[}, {]}, {&},
        {variable}, {variables}, {adquirir}, {instancia}, {fijar}, {a},
        {escribir}, {nl}, {leer}, {si}, {finsi}, {sino}, {mientras},
        {finmientras}, {funcion}, {finfuncion}, {procedimiento},
        {finprocedimiento}, {metodo}, {finmetodo}, {devolver}, {llamar},
        {finargs}, {con}, {de}, {y}, {e}, {clase}, {hereda}, {extiende},
        {implementa}, {finclase}, {atributo}, {atributos}, {estatico},
        {clonar}, {finclonar}, {son}, {sean}, {iguales}, {diferentes}, {y},
        {tanto}, {como}, {algun}, {o}, {necesitas}, {utilizar}, {no},
        {finimplementa}, {ref}
    )

[ " ]

clase TokenNumero hereda Token
    atributo valor

    metodo inicializar: area, texto, valor

    metodo comoTextoBonito
finclase

metodo TokenNumero#inicializar: area, texto, valor
    (Token#_crearConYo: yo)#inicializar: area, texto
    fijar yo#valor a valor
finmetodo

metodo TokenNumero#comoTextoBonito
    devolver {un número ~t}#formatear: yo#texto
finmetodo

clase TokenOperador hereda Token
    metodo op

    metodo comoTextoBonito
finclase

metodo TokenOperador#op
    devolver yo#texto
finmetodo

metodo TokenOperador#comoTextoBonito
    devolver {un operador [~t]}#formatear: yo#texto
finmetodo

clase TokenTexto hereda Token
    metodo comoTextoBonito
finclase

metodo TokenTexto#comoTextoBonito
    devolver {un texto [~t]}#formatear: yo#texto
finmetodo

clase TokenComentario hereda Token
    metodo comoTextoBonito
finclase

metodo TokenComentario#comoTextoBonito
    devolver {un comentario [~t]}#formatear: yo#texto
finmetodo
