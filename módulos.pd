utilizar bepd/builtins
utilizar bepd/x/enum
utilizar bepd/x/sistemaDeArchivos/archivo como Archivo
utilizar bepd/x/sexpr como SExpr
utilizar ámbito como Ámbito


clase ConfiguraciónGlobal
    metodo estatico predeterminado: usarVariablesDeEntorno

    metodo rutasDondeBuscar
    metodo extensionesAProbar
finclase

atributo ConfiguraciónGlobal#rutas, ConfiguraciónGlobal#extensiones

metodo ConfiguraciónGlobal#inicializar: rutas, exts
    fijar yo#rutas a rutas
    fijar yo#extensiones a exts
finmetodo

metodo ConfiguraciónGlobal#rutasDondeBuscar
    devolver yo#rutas
finmetodo

metodo ConfiguraciónGlobal#extensionesAProbar
    devolver yo#extensiones
finmetodo

metodo estatico ConfiguraciónGlobal#predeterminado
    devolver yo#crear:
        (Arreglo#crearCon:
            {.},
            {/opt/pseudod/lib/pseudod/v3},
            {/opt/pseudod/lib/pseudod/v3/r0}),
        (Arreglo#crearCon:
            {pd},
            {psd},
            {pseudo},
            {pseudod})
finmetodo


clase LlaveDeMódulo
    metodo ruta
    metodo nombre
    metodo extensión

    metodo nombreCompletoDelArchivo

    metodo comoTexto
finclase

atributos LlaveDeMódulo#ruta, LlaveDeMódulo#nombre, LlaveDeMódulo#extensión

metodo LlaveDeMódulo#inicializar: ruta, nombre, ext
    fijar yo#ruta a ruta
    fijar yo#nombre a nombre
    fijar yo#extensión a ext
finmetodo

metodo LlaveDeMódulo#nombreCompletoDelArchivo
    devolver {~t/~t.~t}#formatear: yo#ruta, yo#nombre, yo#extensión
finmetodo

metodo LlaveDeMódulo#comoTexto
    devolver {(LlaveDeMódulo: ~t)}#formatear: yo#nombreCompletoDelArchivo
finmetodo


procedimiento BuscarMódulo: conf, nombre
    variables rutaEnc, nombreEnc, extEnc
    LlamarConEC: procedimiento: esc
        ParaCadaElemento: conf#rutasDondeBuscar, procedimiento: ruta
            ParaCadaElemento: conf#extensionesAProbar, procedimiento: ext
                si Archivo#Existe: ({~t/~t.~t}#formatear: ruta, nombre, ext)
                    fijar rutaEnc a ruta
                    fijar nombreEnc a nombre
                    fijar extEnc a ext
                    %esc: NULO
                finsi
            finprocedimiento
        finprocedimiento
    finprocedimiento
    si (EsNulo: rutaEnc) || (EsNulo: nombreEnc) || (EsNulo: extEnc)
        devolver NULO
    finsi
    devolver LlaveDeMódulo#crear: rutaEnc, nombreEnc, extEnc
finprocedimiento


clase Módulo
    metodo llave
    metodo ruta
    metodo nombre
    metodo exporta
    metodo compilado

    metodo comoTexto
finclase

atributos Módulo#llave, Módulo#exporta, Módulo#compilado

metodo Módulo#ruta
    devolver yo#llave#ruta
finmetodo

metodo Módulo#nombre
    devolver yo#llave#nombre
finmetodo

metodo Módulo#comoTexto
    devolver {(Módulo: llave = ~t, exporta = ~t, compilado = ~t)}#formatear: yo#llave, yo#exporta, yo#compilado
finmetodo


clase BaseDeDatos
    metodo estatico conConfiguración: conf

    metodo configuración

    metodo buscarMóduloPorLlave: llaveDeMódulo
    metodo buscarMóduloPorNombre: nombre
    metodo agregarMódulo: módulo

    metodo paraCadaMódulo: proc

    metodo guardarMódulos: puerto
    metodo cargarMódulos: puerto
finclase

atributos BaseDeDatos#módulos, BaseDeDatos#configuración

metodo estatico BaseDeDatos#conConfiguración: conf
    devolver yo#crear: conf
finmetodo

metodo BaseDeDatos#inicializar: conf
    fijar yo#configuración a conf
    fijar yo#módulos a Diccionario#vacío
finmetodo

metodo BaseDeDatos#buscarMóduloPorLlave: llave
    devolver yo#buscarMóduloPorNombre: llave#nombre
finmetodo

metodo BaseDeDatos#buscarMóduloPorNombre: nombre
    si yo#módulos#contiene: nombre
        devolver yo#módulos#en: nombre
    sino
        devolver NULO
    finsi
finmetodo

metodo BaseDeDatos#agregarMódulo: mod
    yo#módulos#fijarEn: mod#nombre, mod
finmetodo

metodo BaseDeDatos#paraCadaMódulo: proc
    yo#módulos#paraCadaPar: procedimiento: nombre, mod
        %proc: mod
    finprocedimiento
finmetodo

metodo BaseDeDatos#guardarMódulos: puerto
    funcion A: ...X
        devolver X
    finfuncion

    funcion S: T
        devolver SExpr#Símbolo#desdeTexto: T
    finfuncion

    funcion MapearMódulos: proc
        variable acc
        fijar acc a Arreglo#vacio
        yo#módulos#paraCadaValor: procedimiento: mod
            acc#agregarAlFinal: (%proc: mod)
        finprocedimiento
        devolver acc
    finfuncion

    variable datum
    fijar datum a (A:
        (S: {base-de-datos}),
        (ArregloConFinal:
            (S: {modulos}),
            (MapearMódulos: funcion: mod
                devolver A:
                    (A: (S: {nombre}), mod#nombre),
                    (A: (S: {ruta}), mod#ruta),
                    (A: (S: {extension}), mod#llave#extensión),
                    (ArregloConFinal:
                        (S: {exporta}),
                        (funcion
                            variable acc
                            fijar acc a Arreglo#vacio
                            mod#exporta#paraCadaVariable: funcion: var, dv
                                acc#agregarAlFinal: (A: var, dv#esAutoejecutable)
                            finfuncion
                            devolver acc
                        finfuncion)#\llamar\),
                    (A: (S: {compilado}), mod#compilado)
            finfuncion)))
    SExpr#DesparsearDato: puerto, datum
finmetodo

metodo BaseDeDatos#cargarMódulos: puerto
    funcion SExprADiccionario: se
        necesitas EsInstancia: se, Arreglo
        variable acc
        fijar acc a Diccionario#vacío
        ParaCadaElemento: se, procedimiento: val
            necesitas EsInstancia: val, Arreglo
            si val#longitud = 2
                acc#fijarEn: (val#en: 0), (val#en: 1)
            sino
                acc#fijarEn: (val#en: 0), (PedazoDeArreglo: val, 1, -1)
            finsi
        finprocedimiento
        devolver acc
    finfuncion

    funcion SExprAPropiedades: se, ignorarPrimero
        necesitas EsInstancia: se, Arreglo
        variable acc
        fijar acc a Diccionario#vacío
        ParaCadaElementoConÍndice: se, procedimiento: val, i
            si ignorarPrimero && (i = 0)
                devolver NULO
            finsi
            necesitas EsInstancia: val, Arreglo
            necesitas EsInstancia: (val#en: 0), SExpr#Símbolo
            acc#fijarEn: (val#en: 0)#comoTexto, (PedazoDeArreglo: val, 1, -1)
        finprocedimiento
        devolver acc
    finfuncion

    funcion S: T
        devolver SExpr#Símbolo#desdeTexto: T
    finfuncion

    variables datum, props, módulos
    fijar datum a SExpr#ParsearDato: puerto
    necesitas EsInstancia: datum, Arreglo
    necesitas (datum#en: 0) = (S: {base-de-datos})
    fijar props a SExprAPropiedades: datum, VERDADERO
    fijar módulos a props#en: {modulos}
    ParaCadaElemento: módulos, procedimiento: mod
        variables vals, exporta
        fijar vals a SExprADiccionario: mod
        si yo#módulos#contiene: (vals#en: (S: {nombre}))
            __FallarConMensaje: ({El módulo ~t ya exíste}#formatear: (mod#en: (S: {nombre})))
        finsi
        fijar exporta a Ámbito#Ámbito#crear
        ParaCadaElemento: (vals#en: (S: {exporta})), procedimiento: par
            exporta#agregar: (par#en: 0), NULO
            si par#en: 1
                exporta#marcarComoAutoejecutable: (par#en: 0)
            finsi
        finprocedimiento
        yo#módulos#fijarEn: (vals#en: (S: {nombre})), (clonar Módulo#_crear con
            llave: (LlaveDeMódulo#crear: (vals#en: (S: {ruta})), (vals#en: (S: {nombre})), (vals#en: (S: {extension})))
            exporta: exporta
            compilado: (vals#en: (S: {compilado}))
        finclonar)
    finprocedimiento
finmetodo


procedimiento ResolverMóduloPorNombre: db, nombre, compilar, encontrado, error
    variables enc, llave, mod, conf
    fijar conf a db#configuración
    fijar enc a db#buscarMóduloPorNombre: nombre
    si EsNulo: enc
        fijar llave a BuscarMódulo: conf, nombre
        si EsNulo: llave
            devolver %error
        finsi
        fijar enc a db#buscarMóduloPorLlave: llave
        si EsNulo: enc
            devolver %compilar: llave
        sino
            devolver %encontrado: enc
        finsi
    sino
        devolver %encontrado: enc
    finsi
finprocedimiento
